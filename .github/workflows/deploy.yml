name: deploy

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0.2'

    - name: Install pyenv and Python 2
      run: |
        curl https://pyenv.run | bash
        export PATH="$HOME/.pyenv/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
        pyenv install 2.7.18
        pyenv global 2.7.18

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libv8-dev llvm

    - name: Enable bundler cache
      uses: actions/cache@v4
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Install deps
      run: |
        gem install bundler
        bundle config set path 'vendor/bundle'
        bundle install --jobs 4 --retry 3
        npm install -g mermaid.cli

    - name: Setup deploy options
      id: setup
      run: |
        git config --global user.name "GitHub Action"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        if [[ ${GITHUB_REF} = refs/pull/*/merge ]]; then # pull request
          echo "SRC_BRANCH=${GITHUB_HEAD_REF}" >> $GITHUB_ENV
          echo "NO_PUSH=--no-push" >> $GITHUB_ENV
        elif [[ ${GITHUB_REF} = refs/heads/* ]]; then # branch, e.g. master, source etc
          echo "SRC_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        fi
        echo "DEPLOY_BRANCH=gh-pages" >> $GITHUB_ENV

    - name: Deploy website 
      run: |
        set -e # Exit on error
        yes | bash bin/deploy --verbose ${{ env.NO_PUSH }} \
          --src ${{ env.SRC_BRANCH }} \
          --deploy ${{ env.DEPLOY_BRANCH }}
